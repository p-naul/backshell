const iframe = document.getElementById("api-frame");
var client = new Sketchfab( iframe );
let api;
const uid = 'b50588e7af524b1facdececb130e2e0c';
var boutonAide = document.querySelector("input");

const error = () => window.console.error('Sketchfab API error');
const success = apiClient => {
api = apiClient; 

var clic = 0;
let decl=0;
let indic=0;
let etui1 = 0;
let etui2 = 0;
let clicNom = "";
let clicID1 = 0;
let clicID2 = 0;
let surSphere = 0;
let SX=1;
let SY=1;
let SZ=1;

const obj = [ //tableau copié du terminal (attention, ôter les espaces dans le nom entre ' ')
    ['K1.bas', 63, 0,      -77, -41, 0 ],
    ['K2.hau', 273, 77,    -66, -41, 20 ],
    ['K3.bas', 49, 0,      -55, -41, 0 ],
    ['K4.hau', 287, 35,    -44, -41, 20 ],
    ['K5.bas', 91, 0,      -75, -10, 0 ],
    ['K6.hau', 301, 105,   -61, -10, 27 ],
    ['K7.hau', 315, 119,   -47, -10, 27 ],
    ['K8.hau', 343, 133,   -70, 30, 27 ],
    ['K9.hau', 329, 147,   -56, 30, 27 ],

    ['E1.000', 3,0, 54, 0, 0 ],
    ['E1.001', 161,0, 54, 10, 0 ],
    ['E1.002', 175,0, 54, 20, 0 ],
    ['E1.003', 189,0, 54, 30, 0 ],
    ['E1.004', 203,0, 54, 40, 0 ],

    ['E2.000', 21,0, 70, 0, 0 ],
    ['E2.001', 217,0, 70, 10, 0 ],
    ['E2.002', 231,0, 70, 20, 0 ],
    ['E2.003', 245,0, 70, 30, 0 ],
    ['E2.004', 259,0, 70, 40, 0 ],

    ['BtN45_', 371 ],
    ['BtN90_', 385 ],
    ['BtE45_', 399 ],
    ['BtE90_', 413 ],
    ['BtS45_', 427 ],
    ['BtS90_', 441 ],
    ['BtO45_', 455 ],
    ['BtO90_', 469 ],

    ['Bt000_', 483, 0,   60.88, -32.74, 0 ],
    ['BtRot_', 497 ],

    ['platea', 357, 0,         0, 0, 0 ],
    ['text.0', 511, 0,         0, 0, 0  ]
];




//------------------------------------------------
api.start(function () {
    api.addEventListener('viewerready', () => {
        api.getNodeMap(function(err, nodes) {
            if (!err) {window.console.log(nodes); }
        });
        // api.hide(558); //bouton rotation non programmé
        api.getNodeMap(function(err, nodes) { //récupère les tables de nodeName et instanceId de la scène
            if (!err) {
                if (typeof nodes === 'object') {
                for (const key in nodes) {
                    if (Object.hasOwnProperty.call(nodes, key)) {
                    const node = nodes[key];
                    nodeName = node.name;
                    instanceId = node.instanceID;
                    if (nodeName !== undefined) {
                        if (nodeName.includes("_")) {
                            nodeNameSlice = nodeName.slice(0, 6);
                            // console.log("['",nodeNameSlice, "',",instanceId, "],"); //récupère les noms et ID pour copier dans tableObjets
                        }
                    }
                    }
                }
                } else {console.error('nodes n\'est pas un objet.');}
            } else {console.error('Erreur lors de la récupération des nœuds :', err);}
        });




//-----------------------------------déplace les objets ou ajoute une annotation      
    api.addEventListener('click', function (info) {
    if (info.instanceID) {  // le clic se fait effectivement sur un objet 
        // window.console.log('clicked node', info.instanceID);
        clic = info.instanceID-2;
        posX=info.position3D[0];
        posY=info.position3D[1];
        posZ=info.position3D[2];
        for (let i = 0; i < obj.length; i++) {
            if ((clic == obj[i][1]) || (clic == obj[i][2])) { // récupère les nom et ID (pour les étuis: ID1 et ID2)
                clicNom = obj[i][0];
                clicID1 = obj[i][1];
                clicID2 = obj[i][2];
            };
        };
        console.log('clic', clic, posX,posY,posZ, clicNom, clicID1, clicID2);
        //----------------------------------table du centre----------------------------------
        if ((posX>-.035) && (posX<.035)) { 
            //-----------------------------ajoute une annotation, si le champ texte n'est pas vide et que le clic se fait sur la table centrale
            declaration = document.getElementById("texteNoteNew").value
            if ((declaration.length === 0) || (declaration.length === null)) {
                console.log("la déclaration est vide ou null" ); //alors action possible sur les objets, sélection d'étui pour scale ou transfert de cheminée
                







            } else {// annotation: position, position camera, target camera (=position annotation), title, text
                api.createAnnotationFromScenePosition(  [posX,posY,posZ], [0, -.2, .13],[0, 0, -.02], document.getElementById("texteNoteNew").value,"");
                document.getElementById("texteNoteNew").value="";
            };
        } else { 
            if ((info.instanceID == 357) || (info.instanceID == 511)) { //clic sur la scene
                //pour l'instant, rien de programmé
            } else { //clic d'objet ou de bouton)

                //----------------------------------table de gauche----------------------------------
                if (posX<-.035) { //selection d'un étui
                    for (let i = 0; i < obj.length; i++) {
                        if (obj[i][1] == etui1) { // retour sur la table de gauche
                            api.translate(etui1, [obj[i][3]/1000, obj[i][5]/1000, -obj[i][4]/1000], {duration: .2, easing: 'easeOutQuad'}, function(err, translateTo) {});
                            api.translate(etui2, [obj[i][3]/1000, 0,              -obj[i][4]/1000], {duration: .2, easing: 'easeOutQuad'}, function(err, translateTo) {});
                            scale(etui1, 1, 1, 1);
                            scale(etui2, 1, 1, 1);
                        };
                    };
                    for (let i = 0; i < obj.length; i++) {
                        if ((clic == obj[i][1]) || (clic == obj[i][2])) { // déplace au centre
                            api.translate(obj[i][1], [0, obj[i][5]/1000, 0], {duration: .2, easing: 'easeOutQuad'}, function(err, translateTo) {});
                            api.translate(obj[i][2], [0, 0, 0], {duration: .2, easing: 'easeOutQuad'}, function(err, translateTo) {});
                            etui1 = obj[i][1];
                            etui2 = obj[i][2];
                            scale(etui1, SX, SY, SZ);
                            scale(etui2, SX, SY, SZ);
                            // nomEtui = obj[i][0].slice(0,2);
                            // window.console.log("nom", nomEtui)
                        };
                    };
                } 
                //----------------------------------selection d'une cheminée, déplace sur la sphere, même s'il est y est déjà----------------------------------
                if (clicNom.slice(0,1)=="E") {
                    window.console.log('cheminée sélectionnée', clicID1);
                    api.translate(clicID1, [.0609, .0097, .0327], {duration: .2, easing: 'easeOutQuad'}, function(err, translateTo) {});
                    surSphere = clicID1;
                } 
                //----------------------------------//----------------------------------
            }
        };            
    };
    }); //------------------------- 

    //----------------------------------
    // sélection de cheminée
    // if (ID.slice(0,1) == "E") {
    //     if (sphereLibre == "non") { //sphere de droite occupée => retour vers la table de gauche, tant qu'elle n'a pas été installée sur une base
    //         moveRotate(idChem1,     1,0,0,      0,1,0,      0,0,1,    posXChem1, posYChem1, 0);
    //     }
    //     move(idObjet2, -18.8, 30.2, 15);
    //     nomChem1 = nomObjet2;
    //     idChem1 = idObjet2;
    //     posXChem1 = posX2;
    //     posYChem1 = posY2;
    // }
    //----------------------------------
    // action bouton
    // if (nomObjet2.slice(0,2) == "Bt") {
    //     sphereLibre = "non"
    //     for (let pas4 = 0; pas4 < tableBoutons.length; pas4++) {
    //         if (nomObjet2 == tableBoutons[pas4][0]) {
    //             if (nomObjet2.slice(2,5) == "000") {moveRotate (idChem1, 1,0,0,      0,1,0,      0,0,1,  tableBoutons[pas4][1], tableBoutons[pas4][2], tableBoutons[pas4][3]) };
    //             if (nomObjet2.slice(2,5) == "S45") {moveRotate (idChem1, 1,0,0,      0,0.7,.7,   0,-.7,.7,  tableBoutons[pas4][1], tableBoutons[pas4][2], tableBoutons[pas4][3]) };
    //             if (nomObjet2.slice(2,5) == "S90") {moveRotate (idChem1, 1,0,0,      0,0,1,      0,-1,0,  tableBoutons[pas4][1], tableBoutons[pas4][2], tableBoutons[pas4][3]) };
    //             if (nomObjet2.slice(2,5) == "N45") {moveRotate (idChem1, 1,0,0,      0,0.7,-.7,  0,.7,.7,  tableBoutons[pas4][1], tableBoutons[pas4][2], tableBoutons[pas4][3]) };
    //             if (nomObjet2.slice(2,5) == "N90") {moveRotate (idChem1, 1,0,0,      0,0,-1,     0,1,0,  tableBoutons[pas4][1], tableBoutons[pas4][2], tableBoutons[pas4][3]) };
    //             if (nomObjet2.slice(2,5) == "E45") {moveRotate (idChem1, .7,0,-.7,  .7,0,.7,     0,1,0,    tableBoutons[pas4][1], tableBoutons[pas4][2], tableBoutons[pas4][3]) };
    //             if (nomObjet2.slice(2,5) == "E90") {moveRotate (idChem1, 0,1,0,      1,0,0,      0,0,1,  tableBoutons[pas4][1], tableBoutons[pas4][2], tableBoutons[pas4][3]) };
    //             if (nomObjet2.slice(2,5) == "E45") {moveRotate (idChem1, .7,-.7,0,   .7,.7,0,    0,0,1,    tableBoutons[pas4][1], tableBoutons[pas4][2], tableBoutons[pas4][3]) };
    //             if (nomObjet2.slice(2,5) == "O90") {moveRotate (idChem1, 0,-1,0,      -1,0,0,    0,0,1,  tableBoutons[pas4][1], tableBoutons[pas4][2], tableBoutons[pas4][3]) };
    //             if (nomObjet2.slice(2,5) == "O45") {moveRotate (idChem1, .7,.7,0,   -.7,.7,0,    0,0,1,    tableBoutons[pas4][1], tableBoutons[pas4][2], tableBoutons[pas4][3]) };
    //         }
    //     }
    // }


    document.getElementById("X").addEventListener("input", function(){
         SX = document.getElementById("X").value;
         scale(etui1, SX, SY, SZ);
    });
    document.getElementById("Y").addEventListener("input", function(){
        SY = document.getElementById("Y").value;
        scale(etui1, SX, SY, SZ);
   });
   document.getElementById("Z").addEventListener("input", function(){
        SZ = document.getElementById("Z").value;
        scale(etui1, SX, SY, SZ);
});
    

}); // api.addEventListener('viewerready'
}); // api.start(
};